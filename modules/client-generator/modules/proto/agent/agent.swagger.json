{
  "swagger": "2.0",
  "info": {
    "title": "agent/service.proto",
    "version": "version not set"
  },
  "host": "agent.api.gogemini.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Agent"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{tenantId}/agent/create": {
      "post": {
        "operationId": "Agent_CreateAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/agentAgentEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Agent"
        ]
      }
    },
    "/v1/{tenantId}/agent/list/page-size/{pageSize}": {
      "post": {
        "operationId": "Agent_ListAgents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/agentListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pageToken": {
                  "type": "string"
                },
                "sorts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/ListRequestSort"
                  }
                },
                "filtersMask": {
                  "type": "string"
                },
                "filters": {
                  "$ref": "#/definitions/ListRequestFilters"
                }
              }
            }
          }
        ],
        "tags": [
          "Agent"
        ]
      }
    },
    "/v1/{tenantId}/agent/{id}": {
      "get": {
        "operationId": "Agent_GetAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/agentAgentEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Agent"
        ]
      },
      "put": {
        "operationId": "Agent_UpdateAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/agentAgentEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/agentUpdatePayload"
                },
                "payloadMask": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Agent"
        ]
      }
    }
  },
  "definitions": {
    "ListRequestFilters": {
      "type": "object",
      "properties": {
        "email": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastname": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListRequestSort": {
      "type": "object",
      "properties": {
        "evaluationOrder": {
          "type": "integer",
          "format": "int64"
        },
        "field": {
          "$ref": "#/definitions/SortSortField"
        },
        "order": {
          "$ref": "#/definitions/agentSortOrder"
        }
      }
    },
    "SortSortField": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "DATE",
        "LASTNAME"
      ],
      "default": "UNKNOWN"
    },
    "agentAgentEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "grn": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "agentListResponse": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/agentAgentEntity"
          }
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "agentSortOrder": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "agentUpdatePayload": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "geminiAuthorization": {
      "type": "apiKey",
      "name": "X-Gem-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ]
}